/*
 * jMole.java
 *
 * Created on 25. Juni 2007, 15:06
 */

package org.australia.ui;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.Observable;
import java.util.Observer;
import java.util.TreeSet;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.SpinnerModel;
import javax.swing.SpinnerNumberModel;
import javax.swing.SwingWorker;
import javax.swing.Timer;
import org.apache.log4j.Level;
import org.apache.log4j.Logger;
import org.australia.algorithm.Criterion;

import org.australia.algorithm.GA;
import org.australia.algorithm.Individual;
import org.australia.algorithm.Status;
import org.australia.config.Config;
import org.australia.problem.Problem;
import org.australia.problem.ProblemBoccia;
import org.australia.problem.ProblemHolmberg;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.plot.XYPlot;
import org.jfree.data.time.Second;
import org.jfree.data.time.TimeSeries;
import org.jfree.data.time.TimeSeriesCollection;

/**
 *
 * @author  Daniel_h4x
 */
public class jMole extends javax.swing.JFrame {
    
    private GAExecutorTask task;
    private Logger logger = Logger.getRootLogger();
    
    
    /** Creates new form jMole */
    public jMole() {
        
        initComponents();
        
        jLabel6.setIcon(drawInitialChart());
        
    }
    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        TabbedPanel = new javax.swing.JPanel();
        MainTabPane = new javax.swing.JTabbedPane();
        GASettingPanel = new javax.swing.JPanel();
        BasicSettingPanel = new javax.swing.JPanel();
        StartpopLabel = new javax.swing.JLabel();
        GenSizeLabel = new javax.swing.JLabel();
        PopSizeField = new javax.swing.JTextField();
        GenSizeField = new javax.swing.JTextField();
        FeeLabel = new javax.swing.JLabel();
        FeeSpinner = new javax.swing.JSpinner();
        GreedyLabel = new javax.swing.JLabel();
        GreedySpinner = new javax.swing.JSpinner();
        jLabel8 = new javax.swing.JLabel();
        PopSizeField1 = new javax.swing.JTextField();
        ChosenProblemField = new javax.swing.JTextField();
        ProblemChooserButton = new javax.swing.JButton();
        ExtendedSettingPanel = new javax.swing.JPanel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        LaufzeitInfoPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        BestIndiGeneField = new javax.swing.JTextField();
        BestIndiWareHousesField = new javax.swing.JTextField();
        BestIndiFitnessField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        GAProgressBar = new javax.swing.JProgressBar();
        jLabel4 = new javax.swing.JLabel();
        BestIndiDurationField = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        BestIndiValidField = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        BestIndiFeeField = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        BestIndiProblemField = new javax.swing.JTextField();
        ChartLabel = new javax.swing.JLabel();
        SetDefaultsButton = new javax.swing.JButton();
        CancelGAButton = new javax.swing.JButton();
        StartGA = new javax.swing.JButton();
        SelPressurePanel2 = new javax.swing.JPanel();
        RandomSelect = new javax.swing.JRadioButton();
        RouletteSelect = new javax.swing.JRadioButton();
        jSeparator3 = new javax.swing.JSeparator();
        ParentSelLabel2 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        ChildrenSpinner = new javax.swing.JSpinner();
        ResultViewPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel14 = new javax.swing.JLabel();
        VisualPanel = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        TopMenu = new javax.swing.JMenuBar();
        DateiMenuItem = new javax.swing.JMenu();
        ExportMenu = new javax.swing.JMenu();
        CSVMenuItem = new javax.swing.JMenuItem();
        ExcelMenuItem = new javax.swing.JMenuItem();
        SepVorClose = new javax.swing.JSeparator();
        QuitMenuItem = new javax.swing.JMenuItem();
        BearbeitenMenu = new javax.swing.JMenu();
        UndoMenuItem = new javax.swing.JMenuItem();
        RedoMenuItem = new javax.swing.JMenuItem();
        SepVorZurueck = new javax.swing.JSeparator();
        ZurueckSetzenMenuItem = new javax.swing.JMenuItem();
        HilfeMenu = new javax.swing.JMenu();
        AboutMenuItem = new javax.swing.JMenuItem();
        StatusLabel1 = new javax.swing.JLabel();
        StatusTextLabel = new javax.swing.JLabel();
        TopMenu = new javax.swing.JMenuBar();
        DateiMenuItem = new javax.swing.JMenu();
        ExportMenu = new javax.swing.JMenu();
        CSVMenuItem = new javax.swing.JMenuItem();
        ExcelMenuItem = new javax.swing.JMenuItem();
        SepVorClose = new javax.swing.JSeparator();
        QuitMenuItem = new javax.swing.JMenuItem();
        BearbeitenMenu = new javax.swing.JMenu();
        UndoMenuItem = new javax.swing.JMenuItem();
        RedoMenuItem = new javax.swing.JMenuItem();
        SepVorZurueck = new javax.swing.JSeparator();
        ZurueckSetzenMenuItem = new javax.swing.JMenuItem();
        HilfeMenu = new javax.swing.JMenu();
        AboutMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("jMole");
        setResizable(false);

        BasicSettingPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Allgemeine Einstellungen"));

        StartpopLabel.setText("Gr\u00f6\u00dfe der Startpopulation");

        GenSizeLabel.setText("Anzahl der Generationen");

        PopSizeField.setText("100");

        GenSizeField.setText("100");

        FeeLabel.setText("H\u00f6he der Strafkosten");

        FeeSpinner.setModel(new javax.swing.SpinnerNumberModel(10.5d, 0.1d, 100.0d, 0.5d));

        GreedyLabel.setText("Chance auf \"Greedy\"-Start");

        GreedySpinner.setModel(new javax.swing.SpinnerListModel(new String[] {"0% ", "25%", "50%", "75%", "100%"}));

        jLabel8.setText("Durchl\u00e4ufe");

        PopSizeField1.setText("1");

        ChosenProblemField.setEditable(false);
        ChosenProblemField.setText("Keine Instanz gew\u00e4hlt");

        ProblemChooserButton.setText("Ausw\u00e4hlen");
        ProblemChooserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProblemChooserButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout BasicSettingPanelLayout = new javax.swing.GroupLayout(BasicSettingPanel);
        BasicSettingPanel.setLayout(BasicSettingPanelLayout);
        BasicSettingPanelLayout.setHorizontalGroup(
            BasicSettingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BasicSettingPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(BasicSettingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(BasicSettingPanelLayout.createSequentialGroup()
                        .addGroup(BasicSettingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(StartpopLabel)
                            .addComponent(GenSizeLabel))
                        .addGap(8, 8, 8)
                        .addGroup(BasicSettingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(GenSizeField)
                            .addComponent(PopSizeField, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, BasicSettingPanelLayout.createSequentialGroup()
                        .addComponent(GreedyLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(GreedySpinner)))
                .addGap(18, 18, 18)
                .addGroup(BasicSettingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(FeeLabel)
                    .addComponent(jLabel8))
                .addGap(30, 30, 30)
                .addGroup(BasicSettingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(FeeSpinner, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(PopSizeField1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(BasicSettingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ChosenProblemField, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ProblemChooserButton, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(55, 55, 55))
        );
        BasicSettingPanelLayout.setVerticalGroup(
            BasicSettingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BasicSettingPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(BasicSettingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(StartpopLabel)
                    .addComponent(PopSizeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FeeLabel)
                    .addComponent(FeeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ChosenProblemField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(BasicSettingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(GenSizeLabel)
                    .addComponent(GenSizeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(PopSizeField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ProblemChooserButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(BasicSettingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(GreedyLabel)
                    .addComponent(GreedySpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14))
        );

        ExtendedSettingPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Kriterium f\u00fcr GA-Abbruch"));

        buttonGroup2.add(jRadioButton1);
        jRadioButton1.setSelected(true);
        jRadioButton1.setText("beenden nach gew\u00e4hlter Anzahl an Generationen");
        jRadioButton1.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jRadioButton1.setMargin(new java.awt.Insets(0, 0, 0, 0));

        buttonGroup2.add(jRadioButton2);
        jRadioButton2.setText("beenden nach");
        jRadioButton2.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jRadioButton2.setMargin(new java.awt.Insets(0, 0, 0, 0));

        buttonGroup2.add(jRadioButton3);
        jRadioButton3.setText("beenden nach");
        jRadioButton3.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jRadioButton3.setMargin(new java.awt.Insets(0, 0, 0, 0));

        buttonGroup2.add(jRadioButton4);
        jRadioButton4.setText("beenden nach");
        jRadioButton4.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jRadioButton4.setMargin(new java.awt.Insets(0, 0, 0, 0));

        jTextField1.setText("Min..");

        jLabel7.setText("an Laufzeit");

        jLabel9.setText("Minuten Stagnation");

        jLabel20.setText("Generationen Stagnation");

        javax.swing.GroupLayout ExtendedSettingPanelLayout = new javax.swing.GroupLayout(ExtendedSettingPanel);
        ExtendedSettingPanel.setLayout(ExtendedSettingPanelLayout);
        ExtendedSettingPanelLayout.setHorizontalGroup(
            ExtendedSettingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ExtendedSettingPanelLayout.createSequentialGroup()
                .addGroup(ExtendedSettingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButton1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ExtendedSettingPanelLayout.createSequentialGroup()
                        .addGroup(ExtendedSettingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, ExtendedSettingPanelLayout.createSequentialGroup()
                                .addComponent(jRadioButton4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField3))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, ExtendedSettingPanelLayout.createSequentialGroup()
                                .addComponent(jRadioButton3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField2))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, ExtendedSettingPanelLayout.createSequentialGroup()
                                .addComponent(jRadioButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(ExtendedSettingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel9)
                            .addComponent(jLabel20))))
                .addContainerGap())
        );
        ExtendedSettingPanelLayout.setVerticalGroup(
            ExtendedSettingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ExtendedSettingPanelLayout.createSequentialGroup()
                .addComponent(jRadioButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ExtendedSettingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton2)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ExtendedSettingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton3)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ExtendedSettingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton4)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        LaufzeitInfoPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Laufzeit-Informationen"));

        jLabel1.setText("Bestes Individuum");

        jLabel2.setText("Anzahl Lager");

        jLabel3.setText("Fitness");

        BestIndiGeneField.setEditable(false);

        BestIndiWareHousesField.setEditable(false);
        BestIndiWareHousesField.setToolTipText("Anzahl der verwendeten Lager des besten Individuums.");

        BestIndiFitnessField.setEditable(false);
        BestIndiFitnessField.setToolTipText("Fitness des derzeit besten Individuums.");

        jLabel5.setText("Fortschritt");

        GAProgressBar.setToolTipText("Fortschritt des GA...");

        jLabel4.setText("Dauer");

        BestIndiDurationField.setEditable(false);
        BestIndiDurationField.setToolTipText("Fitness des derzeit besten Individuums.");

        jLabel12.setText("Zul\u00e4ssigkeit");

        BestIndiValidField.setEditable(false);
        BestIndiValidField.setToolTipText("Anzahl der verwendeten Lager des besten Individuums.");

        jLabel15.setText("Strafkosten");

        BestIndiFeeField.setEditable(false);
        BestIndiFeeField.setToolTipText("Anzahl der verwendeten Lager des besten Individuums.");

        jLabel16.setText("Probleminstanz");

        BestIndiProblemField.setEditable(false);
        BestIndiProblemField.setToolTipText("Anzahl der verwendeten Lager des besten Individuums.");

        javax.swing.GroupLayout LaufzeitInfoPanelLayout = new javax.swing.GroupLayout(LaufzeitInfoPanel);
        LaufzeitInfoPanel.setLayout(LaufzeitInfoPanelLayout);
        LaufzeitInfoPanelLayout.setHorizontalGroup(
            LaufzeitInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LaufzeitInfoPanelLayout.createSequentialGroup()
                .addGroup(LaufzeitInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(LaufzeitInfoPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(LaufzeitInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(LaufzeitInfoPanelLayout.createSequentialGroup()
                                .addGroup(LaufzeitInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(LaufzeitInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(LaufzeitInfoPanelLayout.createSequentialGroup()
                                        .addGroup(LaufzeitInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(LaufzeitInfoPanelLayout.createSequentialGroup()
                                                .addComponent(BestIndiWareHousesField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jLabel12)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                            .addGroup(LaufzeitInfoPanelLayout.createSequentialGroup()
                                                .addComponent(BestIndiFitnessField, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jLabel15)
                                                .addGap(10, 10, 10)))
                                        .addGroup(LaufzeitInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(BestIndiFeeField)
                                            .addComponent(BestIndiValidField, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE))
                                        .addGap(18, 18, 18)
                                        .addGroup(LaufzeitInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel16)
                                            .addComponent(jLabel4))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(LaufzeitInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(BestIndiDurationField)
                                            .addComponent(BestIndiProblemField, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE))
                                        .addGap(291, 291, 291))
                                    .addGroup(LaufzeitInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(GAProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 473, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(BestIndiGeneField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 473, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jLabel5)))
                    .addComponent(ChartLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 583, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        LaufzeitInfoPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {BestIndiFitnessField, BestIndiValidField, BestIndiWareHousesField});

        LaufzeitInfoPanelLayout.setVerticalGroup(
            LaufzeitInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LaufzeitInfoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(LaufzeitInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(GAProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(LaufzeitInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(BestIndiGeneField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(LaufzeitInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BestIndiWareHousesField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel12)
                    .addComponent(BestIndiValidField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(BestIndiProblemField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(LaufzeitInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BestIndiFitnessField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel15)
                    .addComponent(BestIndiFeeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(BestIndiDurationField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ChartLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE))
        );

        SetDefaultsButton.setText("Standard wiederherstellen");

        CancelGAButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/australia/ui/img/stop16.png"))); // NOI18N
        CancelGAButton.setText("GA abbrechen");
        CancelGAButton.setEnabled(false);
        CancelGAButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelGAButtonActionPerformed(evt);
            }
        });

        StartGA.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/australia/ui/img/forward16.png"))); // NOI18N
        StartGA.setText("GA starten");
        StartGA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartGAActionPerformed(evt);
            }
        });

        SelPressurePanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Selektionsdruck"));

        buttonGroup1.add(RandomSelect);
        RandomSelect.setSelected(true);
        RandomSelect.setText("Zufall");
        RandomSelect.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        RandomSelect.setMargin(new java.awt.Insets(0, 0, 0, 0));

        buttonGroup1.add(RouletteSelect);
        RouletteSelect.setText("Roulette");
        RouletteSelect.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        RouletteSelect.setMargin(new java.awt.Insets(0, 0, 0, 0));

        ParentSelLabel2.setText("Auswahl der Eltern:");

        jLabel18.setText("Verh\u00e4ltnis an Kindern");

        jLabel19.setText("zu den Eltern");

        ChildrenSpinner.setModel(new javax.swing.SpinnerNumberModel(2.0d, 1.0d, 5.0d, 1.0d));

        javax.swing.GroupLayout SelPressurePanel2Layout = new javax.swing.GroupLayout(SelPressurePanel2);
        SelPressurePanel2.setLayout(SelPressurePanel2Layout);
        SelPressurePanel2Layout.setHorizontalGroup(
            SelPressurePanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SelPressurePanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SelPressurePanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SelPressurePanel2Layout.createSequentialGroup()
                        .addComponent(ParentSelLabel2)
                        .addGap(55, 55, 55)
                        .addGroup(SelPressurePanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(RouletteSelect)
                            .addComponent(RandomSelect)))
                    .addGroup(SelPressurePanel2Layout.createSequentialGroup()
                        .addGroup(SelPressurePanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(SelPressurePanel2Layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addComponent(jLabel19))
                            .addComponent(jLabel18))
                        .addGap(50, 50, 50)
                        .addComponent(ChildrenSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        SelPressurePanel2Layout.setVerticalGroup(
            SelPressurePanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SelPressurePanel2Layout.createSequentialGroup()
                .addGroup(SelPressurePanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SelPressurePanel2Layout.createSequentialGroup()
                        .addComponent(RouletteSelect)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RandomSelect))
                    .addGroup(SelPressurePanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(ParentSelLabel2)))
                .addGap(20, 20, 20)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(SelPressurePanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SelPressurePanel2Layout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel19))
                    .addGroup(SelPressurePanel2Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(ChildrenSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout GASettingPanelLayout = new javax.swing.GroupLayout(GASettingPanel);
        GASettingPanel.setLayout(GASettingPanelLayout);
        GASettingPanelLayout.setHorizontalGroup(
            GASettingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GASettingPanelLayout.createSequentialGroup()
                .addGroup(GASettingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(GASettingPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(GASettingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(GASettingPanelLayout.createSequentialGroup()
                                .addComponent(SetDefaultsButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(CancelGAButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(StartGA))
                            .addComponent(LaufzeitInfoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 599, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(GASettingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, GASettingPanelLayout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(ExtendedSettingPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(SelPressurePanel2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, GASettingPanelLayout.createSequentialGroup()
                            .addGap(5, 5, 5)
                            .addComponent(BasicSettingPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 599, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        GASettingPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {CancelGAButton, StartGA});

        GASettingPanelLayout.setVerticalGroup(
            GASettingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GASettingPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BasicSettingPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(GASettingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SelPressurePanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ExtendedSettingPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LaufzeitInfoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(GASettingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(GASettingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(CancelGAButton)
                        .addComponent(StartGA))
                    .addComponent(SetDefaultsButton))
                .addContainerGap())
        );

        GASettingPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {CancelGAButton, SetDefaultsButton});

        MainTabPane.addTab("Genetischer Algorithmus", GASettingPanel);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel14.setText("TODO: Anbindung an DB, View konzipiern");

        javax.swing.GroupLayout ResultViewPanelLayout = new javax.swing.GroupLayout(ResultViewPanel);
        ResultViewPanel.setLayout(ResultViewPanelLayout);
        ResultViewPanelLayout.setHorizontalGroup(
            ResultViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ResultViewPanelLayout.createSequentialGroup()
                .addGroup(ResultViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ResultViewPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 594, Short.MAX_VALUE))
                    .addGroup(ResultViewPanelLayout.createSequentialGroup()
                        .addGap(168, 168, 168)
                        .addComponent(jLabel14)))
                .addContainerGap())
        );
        ResultViewPanelLayout.setVerticalGroup(
            ResultViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ResultViewPanelLayout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(122, 122, 122)
                .addComponent(jLabel14)
                .addContainerGap(423, Short.MAX_VALUE))
        );

        MainTabPane.addTab("Resultat", ResultViewPanel);

        jLabel13.setText("maybe JFreeChart Time-View");

        javax.swing.GroupLayout VisualPanelLayout = new javax.swing.GroupLayout(VisualPanel);
        VisualPanel.setLayout(VisualPanelLayout);
        VisualPanelLayout.setHorizontalGroup(
            VisualPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VisualPanelLayout.createSequentialGroup()
                .addGroup(VisualPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(VisualPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel13))
                    .addGroup(VisualPanelLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 512, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(74, Short.MAX_VALUE))
        );
        VisualPanelLayout.setVerticalGroup(
            VisualPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VisualPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13)
                .addGap(38, 38, 38)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(413, Short.MAX_VALUE))
        );

        MainTabPane.addTab("Visualisierung", VisualPanel);

        javax.swing.GroupLayout TabbedPanelLayout = new javax.swing.GroupLayout(TabbedPanel);
        TabbedPanel.setLayout(TabbedPanelLayout);
        TabbedPanelLayout.setHorizontalGroup(
            TabbedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainTabPane, javax.swing.GroupLayout.PREFERRED_SIZE, 619, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        TabbedPanelLayout.setVerticalGroup(
            TabbedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainTabPane, javax.swing.GroupLayout.PREFERRED_SIZE, 722, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        DateiMenuItem.setMnemonic('D');
        DateiMenuItem.setText("Datei");

        ExportMenu.setText("Exportieren");

        CSVMenuItem.setText("Komma-getrennte Datei");
        ExportMenu.add(CSVMenuItem);

        ExcelMenuItem.setText("Excel Spreadsheet");
        ExportMenu.add(ExcelMenuItem);

        DateiMenuItem.add(ExportMenu);
        DateiMenuItem.add(SepVorClose);

        QuitMenuItem.setText("jMole beenden");
        QuitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuitMenuItemActionPerformed(evt);
            }
        });
        DateiMenuItem.add(QuitMenuItem);

        TopMenu.add(DateiMenuItem);

        BearbeitenMenu.setText("Bearbeiten");

        UndoMenuItem.setText("R\u00fcckg\u00e4ngig");
        BearbeitenMenu.add(UndoMenuItem);

        RedoMenuItem.setText("Wiederherstellen");
        BearbeitenMenu.add(RedoMenuItem);
        BearbeitenMenu.add(SepVorZurueck);

        ZurueckSetzenMenuItem.setText("Einstellungen f\u00fcr GA zur\u00fccksetzen");
        BearbeitenMenu.add(ZurueckSetzenMenuItem);

        TopMenu.add(BearbeitenMenu);

        HilfeMenu.setText("Hilfe");

        AboutMenuItem.setText("\u00dcber jMole");
        AboutMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AboutMenuItemActionPerformed(evt);
            }
        });
        HilfeMenu.add(AboutMenuItem);

        TopMenu.add(HilfeMenu);

        setJMenuBar(TopMenu);

        StatusLabel1.setText("Status:");

        StatusTextLabel.setText("Initialisiert");

        DateiMenuItem.setMnemonic('D');
        DateiMenuItem.setText("Datei");

        ExportMenu.setText("Exportieren");

        CSVMenuItem.setText("Komma-getrennte Datei");
        ExportMenu.add(CSVMenuItem);

        ExcelMenuItem.setText("Excel Spreadsheet");
        ExportMenu.add(ExcelMenuItem);

        DateiMenuItem.add(ExportMenu);
        DateiMenuItem.add(SepVorClose);

        QuitMenuItem.setText("jMole beenden");
        QuitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuitMenuItemActionPerformed(evt);
            }
        });
        DateiMenuItem.add(QuitMenuItem);

        TopMenu.add(DateiMenuItem);

        BearbeitenMenu.setText("Bearbeiten");

        UndoMenuItem.setText("R\u00fcckg\u00e4ngig");
        BearbeitenMenu.add(UndoMenuItem);

        RedoMenuItem.setText("Wiederherstellen");
        BearbeitenMenu.add(RedoMenuItem);
        BearbeitenMenu.add(SepVorZurueck);

        ZurueckSetzenMenuItem.setText("Einstellungen f\u00fcr GA zur\u00fccksetzen");
        BearbeitenMenu.add(ZurueckSetzenMenuItem);

        TopMenu.add(BearbeitenMenu);

        HilfeMenu.setText("Hilfe");

        AboutMenuItem.setText("\u00dcber jMole");
        AboutMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AboutMenuItemActionPerformed(evt);
            }
        });
        HilfeMenu.add(AboutMenuItem);

        TopMenu.add(HilfeMenu);

        setJMenuBar(TopMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(TabbedPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(StatusLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(StatusTextLabel))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(TabbedPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(StatusLabel1)
                    .addComponent(StatusTextLabel)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private boolean askForExit(){
        
        int n = JOptionPane.showOptionDialog(this, "Sind Sie sicher, dass Sie jMole beenden wollen?","Bitte bestätigen!",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, null );
        
        return (n == JOptionPane.YES_OPTION);
    }
    
    
private void CancelGAButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelGAButtonActionPerformed
   
    task.cancel(true);
    
    StartGA.setEnabled(true);
    CancelGAButton.setEnabled(false);
    BestIndiFitnessField.setText("");
    BestIndiGeneField.setText("");
    BestIndiWareHousesField.setText("");
    GAProgressBar.setValue(0);
    
}//GEN-LAST:event_CancelGAButtonActionPerformed

private void ProblemChooserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProblemChooserButtonActionPerformed
    
    new TreeProblemChooser(this, true, ChosenProblemField).setVisible(true);
    
}//GEN-LAST:event_ProblemChooserButtonActionPerformed

private void QuitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuitMenuItemActionPerformed
    
    if(askForExit()){
        this.dispose();
        System.exit(0);
    }
    
}//GEN-LAST:event_QuitMenuItemActionPerformed

    private void StartGAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartGAActionPerformed
        
        
        // ALLGEMEINE EINSTELLUNGEN einlesen
        
        // get start pop size and amount of generations
        int startPopSize = Integer.parseInt(this.PopSizeField.getText());
        int generations = Integer.parseInt(this.GenSizeField.getText());
        
        // get chosen instance
        String instance = ChosenProblemField.getText();
        //boolean mindStagnation = this.QuitStagnation.isSelected() ? true : false;
        
        // ERWEITERTE EINSTELLUNGEN einlesen
        
        // get greedy chance
        SpinnerModel greedyModel = this.GreedySpinner.getModel();
        double greedyChance = this.ConvertGreedyPercentage(greedyModel.getValue());
        
        // get amount of children to be reproduced
        SpinnerNumberModel childrenModel = (SpinnerNumberModel) this.ChildrenSpinner.getModel();
        double forcedChildren = childrenModel.getNumber().doubleValue();
        
        // get the value for fees
        SpinnerNumberModel feeModel = (SpinnerNumberModel) this.FeeSpinner.getModel();
        double fees = feeModel.getNumber().doubleValue();
        
        // get selection method
        boolean  rouletteSelected = this.RouletteSelect.isSelected() ? true : false;
        int rouletteSelection = rouletteSelected ? 1 : 0;
        
        // Test Ouput of Values  DEV ONLY
        
        StringBuilder sb = new StringBuilder();
        
        sb.append("Input-Values: \n");
        sb.append(" startPopSize " + startPopSize);
        sb.append(" generations " +  generations);
        sb.append(" instance " + instance);
        sb.append(" greedyChance " + greedyChance);
        sb.append(" forcedChildren " + forcedChildren);
        sb.append(" fees " + fees);
        sb.append(" rouletteSelection " + rouletteSelection);
        
        logger.log(Level.INFO, sb.toString());
        
        // Input Werte in Config Klasse schreiben
        
        Config.setNewGenerationSize(forcedChildren);
        Config.setFee(fees);
        Config.setPercentageGreedy(greedyChance);
        Config.setSelectionMethod(rouletteSelection);
        
        try{
            
            Problem problem = null;
            
            // SwingWorker ab hier!
            if(instance.startsWith("P")){
                problem = ProblemHolmberg.readProblem(instance);
            } else if(instance.startsWith("i")){
                problem = ProblemBoccia.readProblem(instance);
            } else if(instance.startsWith("Keine")){
                StatusTextLabel.setText("Konnte GA nicht starten. Fehler: Keine Probleminstanz gewählt!");
            }
            
            if(problem != null){
                task = new GAExecutorTask(problem, startPopSize, generations);
                
                       
                GAProgressBar.setValue(0);
                BestIndiDurationField.setText("");
                BestIndiFitnessField.setText("");
                BestIndiGeneField.setText("");
                BestIndiWareHousesField.setText("");
                StartGA.setEnabled(false);
                CancelGAButton.setEnabled(true);
                
                task.execute();
                
            }
            
        }catch(Exception e){
            
            StatusTextLabel.setText("Konnte GA nicht starten. Fehler:" + e.getClass().getName());
        }
        
}//GEN-LAST:event_StartGAActionPerformed
    
    private void AboutMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AboutMenuItemActionPerformed
        new AboutDialog(this, false).setVisible(true);
}//GEN-LAST:event_AboutMenuItemActionPerformed
    
private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
            }//GEN-LAST:event_jMenuItem1ActionPerformed

/**
 * @param args the command line arguments
 */
public static void main(String args[]) {
    try {
        javax.swing.UIManager.setLookAndFeel(javax.swing.UIManager.getSystemLookAndFeelClassName());
        java.awt.EventQueue.invokeLater(new java.lang.Runnable() {
            
            public void run() {
                jMole jm = new org.australia.ui.jMole();
                jm.setLocationByPlatform(true);
                jm.setVisible(true);
                
            }
        });
    } catch (Exception ex) {
        ex.printStackTrace();
    }
}


class GAExecutorTask extends SwingWorker<Individual, Status>{
    
    Problem problem;
    GA ga;
    GAStateObserver gaso;
    GADurationTimer gadt;
    DurationLabelListener durationListener;
    int startPopSize;
    int generations;
    
    public GAExecutorTask(Problem problem, int startPopSize, int generations){
        
        this.problem = problem;
        this.startPopSize = startPopSize;
        this.generations = generations;
        
        gaso = new GAStateObserver(this.generations);
        
        durationListener = new DurationLabelListener();
        
        gadt = new GADurationTimer(1000, durationListener);
        
        ga = new GA(problem);
        ga.getStatus().addObserver(gaso);
       
    }
    
   
    
    protected Individual doInBackground() {
        
        Individual  bestfound = null;
        
        
        try {
            StatusTextLabel.setText("GA läuft...");
            
            logger.log(Level.INFO, "Starting GA as background task");
            
            //set the durationfield actionlistener in waiting mode (he expects actionevents from that point)
            durationListener.aboutToStart();
            // start the Timer to throw Actionevents to the DurationListener every 1000 ms
            gadt.start();
            
            // Finally start the GA
            bestfound = ga.startAlgorithm(startPopSize, Criterion.GENERATIONS, generations);
            
            logger.log(Level.INFO, "Finished GA as background task");
            
        } catch (Exception exception) {
            exception.printStackTrace();
        }

        
        return bestfound;
    }
    
    @Override
    protected void done() {
        
        gadt.removeActionListener(durationListener);
        gadt.stop();
        
        if(isCancelled()){
            StatusTextLabel.setText("GA abgebrochen!");
        } else{
            StatusTextLabel.setText("GA abgeschlossen!");
        }
        StartGA.setEnabled(true);
        CancelGAButton.setEnabled(false);

   
        
        // print final duration
        // update database (?) / update table on tab 2 (?)
        
        
    }
    
}


class GAStateObserver implements Observer{
    
    protected int generations;
    
    public GAStateObserver(int generations){
        
        this.generations = generations;
        
    }
    
    //update UI
    public void update(Observable o, Object arg) {
        
        //        logger.log(Level.INFO, "update called");
        //        System.out.println(Thread.currentThread().getName());
        
        Status stat = (Status) o;
           
        try{
            java.awt.EventQueue.invokeAndWait( new GAProgressRunnable(stat, generations));
        } catch(Exception e){
            e.printStackTrace();
            
        }
        
    }
    
    
}

class GAProgressRunnable implements Runnable{
    
    
    Status stat;
    int generations;
    
    public GAProgressRunnable(Status stat, int generations) {
        this.stat = stat;
        this.generations = generations;
    }
    
    public void run() {
        
        
        Calendar started = stat.getTimeStarted();
        int iteration = stat.getCurrentGeneration();
        Individual bestIndi = stat.getCurrentBestIndividual();
        
        //                logger.log(Level.INFO, "Inside GAProgressRunnable");
        //                logger.log(Level.INFO, Thread.currentThread().getName();
        
        if(started != null){
            long start = started.getTimeInMillis();
        }
        
        // update UI according to these values
        
        //progressbar
        
        int progress = (int)((iteration / (double)generations) * 100);
        GAProgressBar.setValue(progress);
        
        //bestIndi Fields
        
        if(bestIndi != null){
            
            String geneString = bestIndi.getGeneString();
            
            if(!geneString.equals(BestIndiGeneField.getText())){
                BestIndiGeneField.setText(geneString);
            }
                        
            BestIndiFitnessField.setText(bestIndi.getFitness().toString());
            BestIndiFeeField.setText(""+bestIndi.getFeeCosts());
            
            if(bestIndi.isValid()){
                BestIndiValidField.setText("Zulässig!");
            }
            else{
                 BestIndiValidField.setText("Unzulässig!");
            }

            
            int[] genes = bestIndi.getGene();
            TreeSet set = new TreeSet();
            
            for (int i = 0; i < genes.length; i++) {
                set.add(genes[i]);
            }
            
            BestIndiWareHousesField.setText("" + set.size());
            
        }
        
    }
    
<<<<<<< .working
}
=======
        public void run() {
             
                
                Calendar started = stat.getTimeStarted();
                int iteration = stat.getCurrentGeneration();
                Individual bestIndi = stat.getCurrentBestIndividual();
        
                SimpleDateFormat sdf = new SimpleDateFormat("HH:mm:ss:SSSS");
>>>>>>> .merge-right.r75


class GADurationTimer extends Timer {
    
        public GADurationTimer(int delay, ActionListener listener) {
            super(delay, listener);
        }    
}

class DurationLabelListener implements ActionListener{

       Date start = null;
    
       SimpleDateFormat sdf = new SimpleDateFormat("mm:ss");

        public void aboutToStart() {
            
            if(start == null){
                this.start = new Date();
            }
            
        }
    
        public void actionPerformed(ActionEvent e) {
           
           if(start == null){
               throw new RuntimeException("A Timer-Event was created, but aboutToStart() has not been called.");               
           } 
            
           long ms = new Date().getTime() -  start.getTime();
            
           BestIndiDurationField.setText(sdf.format(new Date(ms)));

        }
    
    
}


private ImageIcon drawInitialChart(){
   
    ImageIcon icon = null;
    
    TimeSeries series = new TimeSeries("Verlauf der Fitness", Second.class);
    TimeSeriesCollection dataset = new TimeSeriesCollection(series);
    
    JFreeChart chart = ChartFactory.createTimeSeriesChart("Dynamischer Verlauf der Fitness", "Zeit", "Fitness",
                                                          dataset, true, true, false);
    XYPlot plot = chart.getXYPlot();
    ValueAxis axis = plot.getDomainAxis();
//    axis.setAutoRange(true);
//    axis.setFixedAutoRange(60000.0);
//    
//    axis = plot.getRangeAxis();
//    axis.setRange(0.0, 1000.0);
    
    icon = new ImageIcon(chart.createBufferedImage(ChartLabel.getWidth(), ChartLabel.getHeight()));
    
    return icon;
}

/**
 * BAAAAAD practice.....
 *
 * it feels so wrong... at least it works
 *
 */
private double ConvertGreedyPercentage(Object spinnerValue){
    
    String inputPercentage = (String)spinnerValue;
    double actualPercentage = -1;
    
    if(inputPercentage.startsWith("0")){
        actualPercentage = 0.0;
    } else if(inputPercentage.startsWith("25")){
        actualPercentage = 0.25;
    } else if(inputPercentage.startsWith("50")){
        actualPercentage = 0.5;
    } else if(inputPercentage.startsWith("75")){
        actualPercentage = 0.75;
    } else if(inputPercentage.startsWith("100"))
        actualPercentage = 1.0;
    
    return actualPercentage;
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem AboutMenuItem;
    private javax.swing.JPanel BasicSettingPanel;
    private javax.swing.JMenu BearbeitenMenu;
    private javax.swing.JTextField BestIndiDurationField;
    private javax.swing.JTextField BestIndiFeeField;
    private javax.swing.JTextField BestIndiFitnessField;
    private javax.swing.JTextField BestIndiGeneField;
    private javax.swing.JTextField BestIndiProblemField;
    private javax.swing.JTextField BestIndiValidField;
    private javax.swing.JTextField BestIndiWareHousesField;
    private javax.swing.JMenuItem CSVMenuItem;
    private javax.swing.JButton CancelGAButton;
    private javax.swing.JLabel ChartLabel;
    private javax.swing.JSpinner ChildrenSpinner;
    private javax.swing.JTextField ChosenProblemField;
    private javax.swing.JMenu DateiMenuItem;
    private javax.swing.JMenuItem ExcelMenuItem;
    private javax.swing.JMenu ExportMenu;
    private javax.swing.JPanel ExtendedSettingPanel;
    private javax.swing.JLabel FeeLabel;
    private javax.swing.JSpinner FeeSpinner;
    private javax.swing.JProgressBar GAProgressBar;
    private javax.swing.JPanel GASettingPanel;
    private javax.swing.JTextField GenSizeField;
    private javax.swing.JLabel GenSizeLabel;
    private javax.swing.JLabel GreedyLabel;
    private javax.swing.JSpinner GreedySpinner;
    private javax.swing.JMenu HilfeMenu;
    private javax.swing.JPanel LaufzeitInfoPanel;
    private javax.swing.JTabbedPane MainTabPane;
    private javax.swing.JLabel ParentSelLabel2;
    private javax.swing.JTextField PopSizeField;
    private javax.swing.JTextField PopSizeField1;
    private javax.swing.JButton ProblemChooserButton;
    private javax.swing.JMenuItem QuitMenuItem;
    private javax.swing.JRadioButton RandomSelect;
    private javax.swing.JMenuItem RedoMenuItem;
    private javax.swing.JPanel ResultViewPanel;
    private javax.swing.JRadioButton RouletteSelect;
    private javax.swing.JPanel SelPressurePanel2;
    private javax.swing.JSeparator SepVorClose;
    private javax.swing.JSeparator SepVorZurueck;
    private javax.swing.JButton SetDefaultsButton;
    private javax.swing.JButton StartGA;
    private javax.swing.JLabel StartpopLabel;
    private javax.swing.JLabel StatusLabel1;
    private javax.swing.JLabel StatusTextLabel;
    private javax.swing.JPanel TabbedPanel;
    private javax.swing.JMenuBar TopMenu;
    private javax.swing.JMenuItem UndoMenuItem;
    private javax.swing.JPanel VisualPanel;
    private javax.swing.JMenuItem ZurueckSetzenMenuItem;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables
    
}
